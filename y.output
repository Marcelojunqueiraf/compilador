State 43 conflicts: 3 shift/reduce
State 44 conflicts: 3 shift/reduce
State 45 conflicts: 3 shift/reduce
State 46 conflicts: 3 shift/reduce
State 47 conflicts: 7 shift/reduce
State 48 conflicts: 7 shift/reduce
State 49 conflicts: 7 shift/reduce


Grammar

    0 $accept: program $end

    1 $@1: %empty

    2 program: LET $@1 declarations IN commands END

    3 declarations: %empty
    4             | INTEGER id_seq IDENTIFIER '.'

    5 id_seq: %empty
    6       | id_seq IDENTIFIER ','

    7 commands: %empty
    8         | commands command ';'

    9 command: PAUSE
   10        | SKIP
   11        | READ IDENTIFIER
   12        | WRITE exp
   13        | IDENTIFIER ASSGNOP exp

   14 $@2: %empty

   15 $@3: %empty

   16 $@4: %empty

   17 command: IF exp $@2 THEN commands $@3 ELSE $@4 commands FI

   18 $@5: %empty

   19 $@6: %empty

   20 command: WHILE $@5 exp $@6 DO commands END

   21 exp: NUMBER
   22    | IDENTIFIER
   23    | exp '<' exp
   24    | exp '=' exp
   25    | exp '>' exp
   26    | exp '+' exp
   27    | exp '-' exp
   28    | exp '*' exp
   29    | exp '/' exp
   30    | '(' exp ')'


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 30
    ')' (41) 30
    '*' (42) 28
    '+' (43) 26
    ',' (44) 6
    '-' (45) 27
    '.' (46) 4
    '/' (47) 29
    ';' (59) 8
    '<' (60) 23
    '=' (61) 24
    '>' (62) 25
    error (256)
    NUMBER <intval> (258) 21
    IDENTIFIER <id> (259) 4 6 11 13 22
    IF <lbls> (260) 17
    WHILE <lbls> (261) 20
    SKIP (262) 10
    THEN (263) 17
    ELSE (264) 17
    FI (265) 17
    DO (266) 20
    END (267) 2 20
    INTEGER (268) 4
    READ (269) 11
    WRITE (270) 12
    LET (271) 2
    IN (272) 2
    ASSGNOP (273) 13
    PAUSE (274) 9


Nonterminals, with rules where they appear

    $accept (32)
        on left: 0
    program (33)
        on left: 2
        on right: 0
    $@1 (34)
        on left: 1
        on right: 2
    declarations (35)
        on left: 3 4
        on right: 2
    id_seq (36)
        on left: 5 6
        on right: 4 6
    commands (37)
        on left: 7 8
        on right: 2 8 17 20
    command (38)
        on left: 9 10 11 12 13 17 20
        on right: 8
    $@2 (39)
        on left: 14
        on right: 17
    $@3 (40)
        on left: 15
        on right: 17
    $@4 (41)
        on left: 16
        on right: 17
    $@5 (42)
        on left: 18
        on right: 20
    $@6 (43)
        on left: 19
        on right: 20
    exp (44)
        on left: 21 22 23 24 25 26 27 28 29 30
        on right: 12 13 17 20 23 24 25 26 27 28 29 30


State 0

    0 $accept: . program $end

    LET  shift, and go to state 1

    program  go to state 2


State 1

    2 program: LET . $@1 declarations IN commands END

    $default  reduce using rule 1 ($@1)

    $@1  go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    2 program: LET $@1 . declarations IN commands END

    INTEGER  shift, and go to state 5

    $default  reduce using rule 3 (declarations)

    declarations  go to state 6


State 4

    0 $accept: program $end .

    $default  accept


State 5

    4 declarations: INTEGER . id_seq IDENTIFIER '.'

    $default  reduce using rule 5 (id_seq)

    id_seq  go to state 7


State 6

    2 program: LET $@1 declarations . IN commands END

    IN  shift, and go to state 8


State 7

    4 declarations: INTEGER id_seq . IDENTIFIER '.'
    6 id_seq: id_seq . IDENTIFIER ','

    IDENTIFIER  shift, and go to state 9


State 8

    2 program: LET $@1 declarations IN . commands END

    $default  reduce using rule 7 (commands)

    commands  go to state 10


State 9

    4 declarations: INTEGER id_seq IDENTIFIER . '.'
    6 id_seq: id_seq IDENTIFIER . ','

    '.'  shift, and go to state 11
    ','  shift, and go to state 12


State 10

    2 program: LET $@1 declarations IN commands . END
    8 commands: commands . command ';'

    IDENTIFIER  shift, and go to state 13
    IF          shift, and go to state 14
    WHILE       shift, and go to state 15
    SKIP        shift, and go to state 16
    END         shift, and go to state 17
    READ        shift, and go to state 18
    WRITE       shift, and go to state 19
    PAUSE       shift, and go to state 20

    command  go to state 21


State 11

    4 declarations: INTEGER id_seq IDENTIFIER '.' .

    $default  reduce using rule 4 (declarations)


State 12

    6 id_seq: id_seq IDENTIFIER ',' .

    $default  reduce using rule 6 (id_seq)


State 13

   13 command: IDENTIFIER . ASSGNOP exp

    ASSGNOP  shift, and go to state 22


State 14

   17 command: IF . exp $@2 THEN commands $@3 ELSE $@4 commands FI

    NUMBER      shift, and go to state 23
    IDENTIFIER  shift, and go to state 24
    '('         shift, and go to state 25

    exp  go to state 26


State 15

   20 command: WHILE . $@5 exp $@6 DO commands END

    $default  reduce using rule 18 ($@5)

    $@5  go to state 27


State 16

   10 command: SKIP .

    $default  reduce using rule 10 (command)


State 17

    2 program: LET $@1 declarations IN commands END .

    $default  reduce using rule 2 (program)


State 18

   11 command: READ . IDENTIFIER

    IDENTIFIER  shift, and go to state 28


State 19

   12 command: WRITE . exp

    NUMBER      shift, and go to state 23
    IDENTIFIER  shift, and go to state 24
    '('         shift, and go to state 25

    exp  go to state 29


State 20

    9 command: PAUSE .

    $default  reduce using rule 9 (command)


State 21

    8 commands: commands command . ';'

    ';'  shift, and go to state 30


State 22

   13 command: IDENTIFIER ASSGNOP . exp

    NUMBER      shift, and go to state 23
    IDENTIFIER  shift, and go to state 24
    '('         shift, and go to state 25

    exp  go to state 31


State 23

   21 exp: NUMBER .

    $default  reduce using rule 21 (exp)


State 24

   22 exp: IDENTIFIER .

    $default  reduce using rule 22 (exp)


State 25

   30 exp: '(' . exp ')'

    NUMBER      shift, and go to state 23
    IDENTIFIER  shift, and go to state 24
    '('         shift, and go to state 25

    exp  go to state 32


State 26

   17 command: IF exp . $@2 THEN commands $@3 ELSE $@4 commands FI
   23 exp: exp . '<' exp
   24    | exp . '=' exp
   25    | exp . '>' exp
   26    | exp . '+' exp
   27    | exp . '-' exp
   28    | exp . '*' exp
   29    | exp . '/' exp

    '-'  shift, and go to state 33
    '+'  shift, and go to state 34
    '*'  shift, and go to state 35
    '/'  shift, and go to state 36
    '<'  shift, and go to state 37
    '='  shift, and go to state 38
    '>'  shift, and go to state 39

    $default  reduce using rule 14 ($@2)

    $@2  go to state 40


State 27

   20 command: WHILE $@5 . exp $@6 DO commands END

    NUMBER      shift, and go to state 23
    IDENTIFIER  shift, and go to state 24
    '('         shift, and go to state 25

    exp  go to state 41


State 28

   11 command: READ IDENTIFIER .

    $default  reduce using rule 11 (command)


State 29

   12 command: WRITE exp .
   23 exp: exp . '<' exp
   24    | exp . '=' exp
   25    | exp . '>' exp
   26    | exp . '+' exp
   27    | exp . '-' exp
   28    | exp . '*' exp
   29    | exp . '/' exp

    '-'  shift, and go to state 33
    '+'  shift, and go to state 34
    '*'  shift, and go to state 35
    '/'  shift, and go to state 36
    '<'  shift, and go to state 37
    '='  shift, and go to state 38
    '>'  shift, and go to state 39

    $default  reduce using rule 12 (command)


State 30

    8 commands: commands command ';' .

    $default  reduce using rule 8 (commands)


State 31

   13 command: IDENTIFIER ASSGNOP exp .
   23 exp: exp . '<' exp
   24    | exp . '=' exp
   25    | exp . '>' exp
   26    | exp . '+' exp
   27    | exp . '-' exp
   28    | exp . '*' exp
   29    | exp . '/' exp

    '-'  shift, and go to state 33
    '+'  shift, and go to state 34
    '*'  shift, and go to state 35
    '/'  shift, and go to state 36
    '<'  shift, and go to state 37
    '='  shift, and go to state 38
    '>'  shift, and go to state 39

    $default  reduce using rule 13 (command)


State 32

   23 exp: exp . '<' exp
   24    | exp . '=' exp
   25    | exp . '>' exp
   26    | exp . '+' exp
   27    | exp . '-' exp
   28    | exp . '*' exp
   29    | exp . '/' exp
   30    | '(' exp . ')'

    '-'  shift, and go to state 33
    '+'  shift, and go to state 34
    '*'  shift, and go to state 35
    '/'  shift, and go to state 36
    '<'  shift, and go to state 37
    '='  shift, and go to state 38
    '>'  shift, and go to state 39
    ')'  shift, and go to state 42


State 33

   27 exp: exp '-' . exp

    NUMBER      shift, and go to state 23
    IDENTIFIER  shift, and go to state 24
    '('         shift, and go to state 25

    exp  go to state 43


State 34

   26 exp: exp '+' . exp

    NUMBER      shift, and go to state 23
    IDENTIFIER  shift, and go to state 24
    '('         shift, and go to state 25

    exp  go to state 44


State 35

   28 exp: exp '*' . exp

    NUMBER      shift, and go to state 23
    IDENTIFIER  shift, and go to state 24
    '('         shift, and go to state 25

    exp  go to state 45


State 36

   29 exp: exp '/' . exp

    NUMBER      shift, and go to state 23
    IDENTIFIER  shift, and go to state 24
    '('         shift, and go to state 25

    exp  go to state 46


State 37

   23 exp: exp '<' . exp

    NUMBER      shift, and go to state 23
    IDENTIFIER  shift, and go to state 24
    '('         shift, and go to state 25

    exp  go to state 47


State 38

   24 exp: exp '=' . exp

    NUMBER      shift, and go to state 23
    IDENTIFIER  shift, and go to state 24
    '('         shift, and go to state 25

    exp  go to state 48


State 39

   25 exp: exp '>' . exp

    NUMBER      shift, and go to state 23
    IDENTIFIER  shift, and go to state 24
    '('         shift, and go to state 25

    exp  go to state 49


State 40

   17 command: IF exp $@2 . THEN commands $@3 ELSE $@4 commands FI

    THEN  shift, and go to state 50


State 41

   20 command: WHILE $@5 exp . $@6 DO commands END
   23 exp: exp . '<' exp
   24    | exp . '=' exp
   25    | exp . '>' exp
   26    | exp . '+' exp
   27    | exp . '-' exp
   28    | exp . '*' exp
   29    | exp . '/' exp

    '-'  shift, and go to state 33
    '+'  shift, and go to state 34
    '*'  shift, and go to state 35
    '/'  shift, and go to state 36
    '<'  shift, and go to state 37
    '='  shift, and go to state 38
    '>'  shift, and go to state 39

    $default  reduce using rule 19 ($@6)

    $@6  go to state 51


State 42

   30 exp: '(' exp ')' .

    $default  reduce using rule 30 (exp)


State 43

   23 exp: exp . '<' exp
   24    | exp . '=' exp
   25    | exp . '>' exp
   26    | exp . '+' exp
   27    | exp . '-' exp
   27    | exp '-' exp .
   28    | exp . '*' exp
   29    | exp . '/' exp

    '*'  shift, and go to state 35
    '/'  shift, and go to state 36
    '<'  shift, and go to state 37
    '='  shift, and go to state 38
    '>'  shift, and go to state 39

    '<'       [reduce using rule 27 (exp)]
    '='       [reduce using rule 27 (exp)]
    '>'       [reduce using rule 27 (exp)]
    $default  reduce using rule 27 (exp)


State 44

   23 exp: exp . '<' exp
   24    | exp . '=' exp
   25    | exp . '>' exp
   26    | exp . '+' exp
   26    | exp '+' exp .
   27    | exp . '-' exp
   28    | exp . '*' exp
   29    | exp . '/' exp

    '*'  shift, and go to state 35
    '/'  shift, and go to state 36
    '<'  shift, and go to state 37
    '='  shift, and go to state 38
    '>'  shift, and go to state 39

    '<'       [reduce using rule 26 (exp)]
    '='       [reduce using rule 26 (exp)]
    '>'       [reduce using rule 26 (exp)]
    $default  reduce using rule 26 (exp)


State 45

   23 exp: exp . '<' exp
   24    | exp . '=' exp
   25    | exp . '>' exp
   26    | exp . '+' exp
   27    | exp . '-' exp
   28    | exp . '*' exp
   28    | exp '*' exp .
   29    | exp . '/' exp

    '<'  shift, and go to state 37
    '='  shift, and go to state 38
    '>'  shift, and go to state 39

    '<'       [reduce using rule 28 (exp)]
    '='       [reduce using rule 28 (exp)]
    '>'       [reduce using rule 28 (exp)]
    $default  reduce using rule 28 (exp)


State 46

   23 exp: exp . '<' exp
   24    | exp . '=' exp
   25    | exp . '>' exp
   26    | exp . '+' exp
   27    | exp . '-' exp
   28    | exp . '*' exp
   29    | exp . '/' exp
   29    | exp '/' exp .

    '<'  shift, and go to state 37
    '='  shift, and go to state 38
    '>'  shift, and go to state 39

    '<'       [reduce using rule 29 (exp)]
    '='       [reduce using rule 29 (exp)]
    '>'       [reduce using rule 29 (exp)]
    $default  reduce using rule 29 (exp)


State 47

   23 exp: exp . '<' exp
   23    | exp '<' exp .
   24    | exp . '=' exp
   25    | exp . '>' exp
   26    | exp . '+' exp
   27    | exp . '-' exp
   28    | exp . '*' exp
   29    | exp . '/' exp

    '-'  shift, and go to state 33
    '+'  shift, and go to state 34
    '*'  shift, and go to state 35
    '/'  shift, and go to state 36
    '<'  shift, and go to state 37
    '='  shift, and go to state 38
    '>'  shift, and go to state 39

    '-'       [reduce using rule 23 (exp)]
    '+'       [reduce using rule 23 (exp)]
    '*'       [reduce using rule 23 (exp)]
    '/'       [reduce using rule 23 (exp)]
    '<'       [reduce using rule 23 (exp)]
    '='       [reduce using rule 23 (exp)]
    '>'       [reduce using rule 23 (exp)]
    $default  reduce using rule 23 (exp)


State 48

   23 exp: exp . '<' exp
   24    | exp . '=' exp
   24    | exp '=' exp .
   25    | exp . '>' exp
   26    | exp . '+' exp
   27    | exp . '-' exp
   28    | exp . '*' exp
   29    | exp . '/' exp

    '-'  shift, and go to state 33
    '+'  shift, and go to state 34
    '*'  shift, and go to state 35
    '/'  shift, and go to state 36
    '<'  shift, and go to state 37
    '='  shift, and go to state 38
    '>'  shift, and go to state 39

    '-'       [reduce using rule 24 (exp)]
    '+'       [reduce using rule 24 (exp)]
    '*'       [reduce using rule 24 (exp)]
    '/'       [reduce using rule 24 (exp)]
    '<'       [reduce using rule 24 (exp)]
    '='       [reduce using rule 24 (exp)]
    '>'       [reduce using rule 24 (exp)]
    $default  reduce using rule 24 (exp)


State 49

   23 exp: exp . '<' exp
   24    | exp . '=' exp
   25    | exp . '>' exp
   25    | exp '>' exp .
   26    | exp . '+' exp
   27    | exp . '-' exp
   28    | exp . '*' exp
   29    | exp . '/' exp

    '-'  shift, and go to state 33
    '+'  shift, and go to state 34
    '*'  shift, and go to state 35
    '/'  shift, and go to state 36
    '<'  shift, and go to state 37
    '='  shift, and go to state 38
    '>'  shift, and go to state 39

    '-'       [reduce using rule 25 (exp)]
    '+'       [reduce using rule 25 (exp)]
    '*'       [reduce using rule 25 (exp)]
    '/'       [reduce using rule 25 (exp)]
    '<'       [reduce using rule 25 (exp)]
    '='       [reduce using rule 25 (exp)]
    '>'       [reduce using rule 25 (exp)]
    $default  reduce using rule 25 (exp)


State 50

   17 command: IF exp $@2 THEN . commands $@3 ELSE $@4 commands FI

    $default  reduce using rule 7 (commands)

    commands  go to state 52


State 51

   20 command: WHILE $@5 exp $@6 . DO commands END

    DO  shift, and go to state 53


State 52

    8 commands: commands . command ';'
   17 command: IF exp $@2 THEN commands . $@3 ELSE $@4 commands FI

    IDENTIFIER  shift, and go to state 13
    IF          shift, and go to state 14
    WHILE       shift, and go to state 15
    SKIP        shift, and go to state 16
    READ        shift, and go to state 18
    WRITE       shift, and go to state 19
    PAUSE       shift, and go to state 20

    $default  reduce using rule 15 ($@3)

    command  go to state 21
    $@3      go to state 54


State 53

   20 command: WHILE $@5 exp $@6 DO . commands END

    $default  reduce using rule 7 (commands)

    commands  go to state 55


State 54

   17 command: IF exp $@2 THEN commands $@3 . ELSE $@4 commands FI

    ELSE  shift, and go to state 56


State 55

    8 commands: commands . command ';'
   20 command: WHILE $@5 exp $@6 DO commands . END

    IDENTIFIER  shift, and go to state 13
    IF          shift, and go to state 14
    WHILE       shift, and go to state 15
    SKIP        shift, and go to state 16
    END         shift, and go to state 57
    READ        shift, and go to state 18
    WRITE       shift, and go to state 19
    PAUSE       shift, and go to state 20

    command  go to state 21


State 56

   17 command: IF exp $@2 THEN commands $@3 ELSE . $@4 commands FI

    $default  reduce using rule 16 ($@4)

    $@4  go to state 58


State 57

   20 command: WHILE $@5 exp $@6 DO commands END .

    $default  reduce using rule 20 (command)


State 58

   17 command: IF exp $@2 THEN commands $@3 ELSE $@4 . commands FI

    $default  reduce using rule 7 (commands)

    commands  go to state 59


State 59

    8 commands: commands . command ';'
   17 command: IF exp $@2 THEN commands $@3 ELSE $@4 commands . FI

    IDENTIFIER  shift, and go to state 13
    IF          shift, and go to state 14
    WHILE       shift, and go to state 15
    SKIP        shift, and go to state 16
    FI          shift, and go to state 60
    READ        shift, and go to state 18
    WRITE       shift, and go to state 19
    PAUSE       shift, and go to state 20

    command  go to state 21


State 60

   17 command: IF exp $@2 THEN commands $@3 ELSE $@4 commands FI .

    $default  reduce using rule 17 (command)
