State 34 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 $@1: %empty

    2 program: LET $@1 declarations IN commands END

    3 declarations: %empty
    4             | INTEGER id_seq IDENTIFIER '.'

    5 id_seq: %empty
    6       | id_seq IDENTIFIER ','

    7 commands: %empty
    8         | commands command ';'

    9 command: PAUSE
   10        | SKIP
   11        | READ IDENTIFIER
   12        | WRITE exp
   13        | IDENTIFIER ASSGNOP exp

   14 $@2: %empty

   15 $@3: %empty

   16 $@4: %empty

   17 command: IF exp $@2 THEN commands $@3 ELSE $@4 commands FI

   18 $@5: %empty

   19 $@6: %empty

   20 command: WHILE $@5 exp $@6 DO commands END

   21 exp: %empty
   22    | subexp '<' subexp
   23    | subexp '=' subexp
   24    | subexp '>' subexp
   25    | '(' exp ')'
   26    | subexp

   27 subexp: NUMBER
   28       | IDENTIFIER
   29       | subexp '+' subexp
   30       | subexp '-' subexp
   31       | subexp '*' subexp
   32       | subexp '/' subexp
   33       | '(' subexp ')'


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 25 33
    ')' (41) 25 33
    '*' (42) 31
    '+' (43) 29
    ',' (44) 6
    '-' (45) 30
    '.' (46) 4
    '/' (47) 32
    ';' (59) 8
    '<' (60) 22
    '=' (61) 23
    '>' (62) 24
    error (256)
    NUMBER <intval> (258) 27
    IDENTIFIER <id> (259) 4 6 11 13 28
    IF <lbls> (260) 17
    WHILE <lbls> (261) 20
    SKIP (262) 10
    THEN (263) 17
    ELSE (264) 17
    FI (265) 17
    DO (266) 20
    END (267) 2 20
    INTEGER (268) 4
    READ (269) 11
    WRITE (270) 12
    LET (271) 2
    IN (272) 2
    ASSGNOP (273) 13
    PAUSE (274) 9


Nonterminals, with rules where they appear

    $accept (32)
        on left: 0
    program (33)
        on left: 2
        on right: 0
    $@1 (34)
        on left: 1
        on right: 2
    declarations (35)
        on left: 3 4
        on right: 2
    id_seq (36)
        on left: 5 6
        on right: 4 6
    commands (37)
        on left: 7 8
        on right: 2 8 17 20
    command (38)
        on left: 9 10 11 12 13 17 20
        on right: 8
    $@2 (39)
        on left: 14
        on right: 17
    $@3 (40)
        on left: 15
        on right: 17
    $@4 (41)
        on left: 16
        on right: 17
    $@5 (42)
        on left: 18
        on right: 20
    $@6 (43)
        on left: 19
        on right: 20
    exp (44)
        on left: 21 22 23 24 25 26
        on right: 12 13 17 20 25
    subexp (45)
        on left: 27 28 29 30 31 32 33
        on right: 22 23 24 26 29 30 31 32 33


State 0

    0 $accept: . program $end

    LET  shift, and go to state 1

    program  go to state 2


State 1

    2 program: LET . $@1 declarations IN commands END

    $default  reduce using rule 1 ($@1)

    $@1  go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    2 program: LET $@1 . declarations IN commands END

    INTEGER  shift, and go to state 5

    $default  reduce using rule 3 (declarations)

    declarations  go to state 6


State 4

    0 $accept: program $end .

    $default  accept


State 5

    4 declarations: INTEGER . id_seq IDENTIFIER '.'

    $default  reduce using rule 5 (id_seq)

    id_seq  go to state 7


State 6

    2 program: LET $@1 declarations . IN commands END

    IN  shift, and go to state 8


State 7

    4 declarations: INTEGER id_seq . IDENTIFIER '.'
    6 id_seq: id_seq . IDENTIFIER ','

    IDENTIFIER  shift, and go to state 9


State 8

    2 program: LET $@1 declarations IN . commands END

    $default  reduce using rule 7 (commands)

    commands  go to state 10


State 9

    4 declarations: INTEGER id_seq IDENTIFIER . '.'
    6 id_seq: id_seq IDENTIFIER . ','

    '.'  shift, and go to state 11
    ','  shift, and go to state 12


State 10

    2 program: LET $@1 declarations IN commands . END
    8 commands: commands . command ';'

    IDENTIFIER  shift, and go to state 13
    IF          shift, and go to state 14
    WHILE       shift, and go to state 15
    SKIP        shift, and go to state 16
    END         shift, and go to state 17
    READ        shift, and go to state 18
    WRITE       shift, and go to state 19
    PAUSE       shift, and go to state 20

    command  go to state 21


State 11

    4 declarations: INTEGER id_seq IDENTIFIER '.' .

    $default  reduce using rule 4 (declarations)


State 12

    6 id_seq: id_seq IDENTIFIER ',' .

    $default  reduce using rule 6 (id_seq)


State 13

   13 command: IDENTIFIER . ASSGNOP exp

    ASSGNOP  shift, and go to state 22


State 14

   17 command: IF . exp $@2 THEN commands $@3 ELSE $@4 commands FI

    NUMBER      shift, and go to state 23
    IDENTIFIER  shift, and go to state 24
    '('         shift, and go to state 25

    $default  reduce using rule 21 (exp)

    exp     go to state 26
    subexp  go to state 27


State 15

   20 command: WHILE . $@5 exp $@6 DO commands END

    $default  reduce using rule 18 ($@5)

    $@5  go to state 28


State 16

   10 command: SKIP .

    $default  reduce using rule 10 (command)


State 17

    2 program: LET $@1 declarations IN commands END .

    $default  reduce using rule 2 (program)


State 18

   11 command: READ . IDENTIFIER

    IDENTIFIER  shift, and go to state 29


State 19

   12 command: WRITE . exp

    NUMBER      shift, and go to state 23
    IDENTIFIER  shift, and go to state 24
    '('         shift, and go to state 25

    $default  reduce using rule 21 (exp)

    exp     go to state 30
    subexp  go to state 27


State 20

    9 command: PAUSE .

    $default  reduce using rule 9 (command)


State 21

    8 commands: commands command . ';'

    ';'  shift, and go to state 31


State 22

   13 command: IDENTIFIER ASSGNOP . exp

    NUMBER      shift, and go to state 23
    IDENTIFIER  shift, and go to state 24
    '('         shift, and go to state 25

    $default  reduce using rule 21 (exp)

    exp     go to state 32
    subexp  go to state 27


State 23

   27 subexp: NUMBER .

    $default  reduce using rule 27 (subexp)


State 24

   28 subexp: IDENTIFIER .

    $default  reduce using rule 28 (subexp)


State 25

   25 exp: '(' . exp ')'
   33 subexp: '(' . subexp ')'

    NUMBER      shift, and go to state 23
    IDENTIFIER  shift, and go to state 24
    '('         shift, and go to state 25

    $default  reduce using rule 21 (exp)

    exp     go to state 33
    subexp  go to state 34


State 26

   17 command: IF exp . $@2 THEN commands $@3 ELSE $@4 commands FI

    $default  reduce using rule 14 ($@2)

    $@2  go to state 35


State 27

   22 exp: subexp . '<' subexp
   23    | subexp . '=' subexp
   24    | subexp . '>' subexp
   26    | subexp .
   29 subexp: subexp . '+' subexp
   30       | subexp . '-' subexp
   31       | subexp . '*' subexp
   32       | subexp . '/' subexp

    '-'  shift, and go to state 36
    '+'  shift, and go to state 37
    '*'  shift, and go to state 38
    '/'  shift, and go to state 39
    '<'  shift, and go to state 40
    '='  shift, and go to state 41
    '>'  shift, and go to state 42

    $default  reduce using rule 26 (exp)


State 28

   20 command: WHILE $@5 . exp $@6 DO commands END

    NUMBER      shift, and go to state 23
    IDENTIFIER  shift, and go to state 24
    '('         shift, and go to state 25

    $default  reduce using rule 21 (exp)

    exp     go to state 43
    subexp  go to state 27


State 29

   11 command: READ IDENTIFIER .

    $default  reduce using rule 11 (command)


State 30

   12 command: WRITE exp .

    $default  reduce using rule 12 (command)


State 31

    8 commands: commands command ';' .

    $default  reduce using rule 8 (commands)


State 32

   13 command: IDENTIFIER ASSGNOP exp .

    $default  reduce using rule 13 (command)


State 33

   25 exp: '(' exp . ')'

    ')'  shift, and go to state 44


State 34

   22 exp: subexp . '<' subexp
   23    | subexp . '=' subexp
   24    | subexp . '>' subexp
   26    | subexp .
   29 subexp: subexp . '+' subexp
   30       | subexp . '-' subexp
   31       | subexp . '*' subexp
   32       | subexp . '/' subexp
   33       | '(' subexp . ')'

    '-'  shift, and go to state 36
    '+'  shift, and go to state 37
    '*'  shift, and go to state 38
    '/'  shift, and go to state 39
    '<'  shift, and go to state 40
    '='  shift, and go to state 41
    '>'  shift, and go to state 42
    ')'  shift, and go to state 45

    ')'  [reduce using rule 26 (exp)]


State 35

   17 command: IF exp $@2 . THEN commands $@3 ELSE $@4 commands FI

    THEN  shift, and go to state 46


State 36

   30 subexp: subexp '-' . subexp

    NUMBER      shift, and go to state 23
    IDENTIFIER  shift, and go to state 24
    '('         shift, and go to state 47

    subexp  go to state 48


State 37

   29 subexp: subexp '+' . subexp

    NUMBER      shift, and go to state 23
    IDENTIFIER  shift, and go to state 24
    '('         shift, and go to state 47

    subexp  go to state 49


State 38

   31 subexp: subexp '*' . subexp

    NUMBER      shift, and go to state 23
    IDENTIFIER  shift, and go to state 24
    '('         shift, and go to state 47

    subexp  go to state 50


State 39

   32 subexp: subexp '/' . subexp

    NUMBER      shift, and go to state 23
    IDENTIFIER  shift, and go to state 24
    '('         shift, and go to state 47

    subexp  go to state 51


State 40

   22 exp: subexp '<' . subexp

    NUMBER      shift, and go to state 23
    IDENTIFIER  shift, and go to state 24
    '('         shift, and go to state 47

    subexp  go to state 52


State 41

   23 exp: subexp '=' . subexp

    NUMBER      shift, and go to state 23
    IDENTIFIER  shift, and go to state 24
    '('         shift, and go to state 47

    subexp  go to state 53


State 42

   24 exp: subexp '>' . subexp

    NUMBER      shift, and go to state 23
    IDENTIFIER  shift, and go to state 24
    '('         shift, and go to state 47

    subexp  go to state 54


State 43

   20 command: WHILE $@5 exp . $@6 DO commands END

    $default  reduce using rule 19 ($@6)

    $@6  go to state 55


State 44

   25 exp: '(' exp ')' .

    $default  reduce using rule 25 (exp)


State 45

   33 subexp: '(' subexp ')' .

    $default  reduce using rule 33 (subexp)


State 46

   17 command: IF exp $@2 THEN . commands $@3 ELSE $@4 commands FI

    $default  reduce using rule 7 (commands)

    commands  go to state 56


State 47

   33 subexp: '(' . subexp ')'

    NUMBER      shift, and go to state 23
    IDENTIFIER  shift, and go to state 24
    '('         shift, and go to state 47

    subexp  go to state 57


State 48

   29 subexp: subexp . '+' subexp
   30       | subexp . '-' subexp
   30       | subexp '-' subexp .
   31       | subexp . '*' subexp
   32       | subexp . '/' subexp

    '*'  shift, and go to state 38
    '/'  shift, and go to state 39

    $default  reduce using rule 30 (subexp)


State 49

   29 subexp: subexp . '+' subexp
   29       | subexp '+' subexp .
   30       | subexp . '-' subexp
   31       | subexp . '*' subexp
   32       | subexp . '/' subexp

    '*'  shift, and go to state 38
    '/'  shift, and go to state 39

    $default  reduce using rule 29 (subexp)


State 50

   29 subexp: subexp . '+' subexp
   30       | subexp . '-' subexp
   31       | subexp . '*' subexp
   31       | subexp '*' subexp .
   32       | subexp . '/' subexp

    $default  reduce using rule 31 (subexp)


State 51

   29 subexp: subexp . '+' subexp
   30       | subexp . '-' subexp
   31       | subexp . '*' subexp
   32       | subexp . '/' subexp
   32       | subexp '/' subexp .

    $default  reduce using rule 32 (subexp)


State 52

   22 exp: subexp '<' subexp .
   29 subexp: subexp . '+' subexp
   30       | subexp . '-' subexp
   31       | subexp . '*' subexp
   32       | subexp . '/' subexp

    '-'  shift, and go to state 36
    '+'  shift, and go to state 37
    '*'  shift, and go to state 38
    '/'  shift, and go to state 39

    $default  reduce using rule 22 (exp)


State 53

   23 exp: subexp '=' subexp .
   29 subexp: subexp . '+' subexp
   30       | subexp . '-' subexp
   31       | subexp . '*' subexp
   32       | subexp . '/' subexp

    '-'  shift, and go to state 36
    '+'  shift, and go to state 37
    '*'  shift, and go to state 38
    '/'  shift, and go to state 39

    $default  reduce using rule 23 (exp)


State 54

   24 exp: subexp '>' subexp .
   29 subexp: subexp . '+' subexp
   30       | subexp . '-' subexp
   31       | subexp . '*' subexp
   32       | subexp . '/' subexp

    '-'  shift, and go to state 36
    '+'  shift, and go to state 37
    '*'  shift, and go to state 38
    '/'  shift, and go to state 39

    $default  reduce using rule 24 (exp)


State 55

   20 command: WHILE $@5 exp $@6 . DO commands END

    DO  shift, and go to state 58


State 56

    8 commands: commands . command ';'
   17 command: IF exp $@2 THEN commands . $@3 ELSE $@4 commands FI

    IDENTIFIER  shift, and go to state 13
    IF          shift, and go to state 14
    WHILE       shift, and go to state 15
    SKIP        shift, and go to state 16
    READ        shift, and go to state 18
    WRITE       shift, and go to state 19
    PAUSE       shift, and go to state 20

    $default  reduce using rule 15 ($@3)

    command  go to state 21
    $@3      go to state 59


State 57

   29 subexp: subexp . '+' subexp
   30       | subexp . '-' subexp
   31       | subexp . '*' subexp
   32       | subexp . '/' subexp
   33       | '(' subexp . ')'

    '-'  shift, and go to state 36
    '+'  shift, and go to state 37
    '*'  shift, and go to state 38
    '/'  shift, and go to state 39
    ')'  shift, and go to state 45


State 58

   20 command: WHILE $@5 exp $@6 DO . commands END

    $default  reduce using rule 7 (commands)

    commands  go to state 60


State 59

   17 command: IF exp $@2 THEN commands $@3 . ELSE $@4 commands FI

    ELSE  shift, and go to state 61


State 60

    8 commands: commands . command ';'
   20 command: WHILE $@5 exp $@6 DO commands . END

    IDENTIFIER  shift, and go to state 13
    IF          shift, and go to state 14
    WHILE       shift, and go to state 15
    SKIP        shift, and go to state 16
    END         shift, and go to state 62
    READ        shift, and go to state 18
    WRITE       shift, and go to state 19
    PAUSE       shift, and go to state 20

    command  go to state 21


State 61

   17 command: IF exp $@2 THEN commands $@3 ELSE . $@4 commands FI

    $default  reduce using rule 16 ($@4)

    $@4  go to state 63


State 62

   20 command: WHILE $@5 exp $@6 DO commands END .

    $default  reduce using rule 20 (command)


State 63

   17 command: IF exp $@2 THEN commands $@3 ELSE $@4 . commands FI

    $default  reduce using rule 7 (commands)

    commands  go to state 64


State 64

    8 commands: commands . command ';'
   17 command: IF exp $@2 THEN commands $@3 ELSE $@4 commands . FI

    IDENTIFIER  shift, and go to state 13
    IF          shift, and go to state 14
    WHILE       shift, and go to state 15
    SKIP        shift, and go to state 16
    FI          shift, and go to state 65
    READ        shift, and go to state 18
    WRITE       shift, and go to state 19
    PAUSE       shift, and go to state 20

    command  go to state 21


State 65

   17 command: IF exp $@2 THEN commands $@3 ELSE $@4 commands FI .

    $default  reduce using rule 17 (command)
